//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public Sheriff.ECS.Components.PlayerNetworkIdComponent playerNetworkId { get { return (Sheriff.ECS.Components.PlayerNetworkIdComponent)GetComponent(PlayerComponentsLookup.PlayerNetworkId); } }
    public bool hasPlayerNetworkId { get { return HasComponent(PlayerComponentsLookup.PlayerNetworkId); } }

    public void AddPlayerNetworkId(string newValue) {
        var index = PlayerComponentsLookup.PlayerNetworkId;
        var component = (Sheriff.ECS.Components.PlayerNetworkIdComponent)CreateComponent(index, typeof(Sheriff.ECS.Components.PlayerNetworkIdComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerNetworkId(string newValue) {
        var index = PlayerComponentsLookup.PlayerNetworkId;
        var component = (Sheriff.ECS.Components.PlayerNetworkIdComponent)CreateComponent(index, typeof(Sheriff.ECS.Components.PlayerNetworkIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerNetworkId() {
        RemoveComponent(PlayerComponentsLookup.PlayerNetworkId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherPlayerNetworkId;

    public static Entitas.IMatcher<PlayerEntity> PlayerNetworkId {
        get {
            if (_matcherPlayerNetworkId == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.PlayerNetworkId);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherPlayerNetworkId = matcher;
            }

            return _matcherPlayerNetworkId;
        }
    }
}
